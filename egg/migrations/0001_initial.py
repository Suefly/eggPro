# Generated by Django 2.0.3 on 2020-08-24 07:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('cityName', models.CharField(max_length=16, verbose_name='城市')),
                ('danSalesAreaFlag', models.IntegerField(default=0, verbose_name='鸡蛋产区')),
                ('tSalesAreaFlag', models.IntegerField(default=0, verbose_name='淘汰鸡产区')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='DanDailyPriceDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('date', models.DateField(verbose_name='日期')),
                ('dailyprice', models.FloatField(blank=True, null=True, verbose_name='日度价格')),
                ('comments', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.City', verbose_name='城市/区')),
            ],
            options={
                'verbose_name': '各地市区鸡蛋日度价格',
                'verbose_name_plural': '各地市区鸡蛋日度价格',
                'db_table': 'egg_dandailypricedetail',
            },
        ),
        migrations.CreateModel(
            name='DanDailyPriceImportFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('file', models.FileField(upload_to='./upload/DanPrice/', verbose_name='上传文件')),
                ('date', models.DateField(verbose_name='日期选择')),
                ('name', models.CharField(max_length=32, verbose_name='文件名')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '鸡蛋日度价格(Excel导入)',
                'verbose_name_plural': '鸡蛋日度价格(Excel导入)',
                'db_table': 'egg_dandailypriceimportfile',
            },
        ),
        migrations.CreateModel(
            name='DanDailyPriceProvince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('date', models.DateField(verbose_name='日期')),
                ('p_daily_price', models.FloatField(blank=True, null=True, verbose_name='省均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '鸡蛋省级日均价',
                'verbose_name_plural': '鸡蛋省级日均价',
                'db_table': 'egg_dandailypriceprovince',
            },
        ),
        migrations.CreateModel(
            name='DanDailyPriceQGAvg',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('date', models.DateField(verbose_name='日期')),
                ('daily_price', models.FloatField(blank=True, null=True, verbose_name='全国均价')),
                ('chan_dailyprice', models.FloatField(blank=True, null=True, verbose_name='主产区均价')),
                ('xiao_dailyprice', models.FloatField(blank=True, null=True, verbose_name='主销区均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '鸡蛋全国日均价',
                'verbose_name_plural': '鸡蛋全国日均价',
                'db_table': 'egg_dandailypriceqgavg',
            },
        ),
        migrations.CreateModel(
            name='DanMonthlyPriceProvince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('month', models.IntegerField(verbose_name='周度')),
                ('p_monthly_price', models.FloatField(blank=True, null=True, verbose_name='省均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '省级月度均价',
                'verbose_name_plural': '省级月度均价',
                'db_table': 'egg_danmonthlypriceprovince',
            },
        ),
        migrations.CreateModel(
            name='DanMonthlyPriceQGAvg',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('month', models.IntegerField(verbose_name='月份')),
                ('month_price', models.FloatField(blank=True, null=True, verbose_name='月价')),
                ('chan_monthlyprice', models.FloatField(blank=True, null=True, verbose_name='主产区均价')),
                ('xiao_monthlyprice', models.FloatField(blank=True, null=True, verbose_name='主销区均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '鸡蛋全国月度价格均价',
                'verbose_name_plural': '鸡蛋全国月度价格均价',
                'db_table': 'egg_danmonthlypriceqgavg',
            },
        ),
        migrations.CreateModel(
            name='DanWeeklyPriceProvince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('weekNum', models.IntegerField(verbose_name='周度')),
                ('p_weekly_price', models.FloatField(blank=True, null=True, verbose_name='省均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '鸡蛋省级周度均价',
                'verbose_name_plural': '鸡蛋省级周度均价',
                'db_table': 'egg_danweeklypriceprovince',
            },
        ),
        migrations.CreateModel(
            name='DanWeeklyPriceQGAvg',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('weekNum', models.IntegerField(verbose_name='周度')),
                ('weekly_price', models.FloatField(blank=True, null=True, verbose_name='周价')),
                ('chan_weeklyprice', models.FloatField(blank=True, null=True, verbose_name='主产区均价')),
                ('xiao_weeklyprice', models.FloatField(blank=True, null=True, verbose_name='主销区均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '鸡蛋全国周度价格均价',
                'verbose_name_plural': '鸡蛋全国周度价格均价',
                'db_table': 'egg_danweeklypriceqgavg',
            },
        ),
        migrations.CreateModel(
            name='MonthDateStandard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('month', models.IntegerField(verbose_name='月份')),
                ('startDate', models.DateField(verbose_name='开始日期')),
                ('endDate', models.DateField(verbose_name='结束日期')),
                ('Remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyCostProvince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('month', models.IntegerField(verbose_name='几月')),
                ('cost_value', models.FloatField(verbose_name='成本')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyCostQGAvg',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('month', models.IntegerField(verbose_name='几月')),
                ('cost_value', models.FloatField(verbose_name='成本')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '蛋鸡养殖全国月度成本',
                'verbose_name_plural': '蛋鸡养殖全国月度成本',
                'db_table': 'egg_monthlycostqgavg',
            },
        ),
        migrations.CreateModel(
            name='MonthlyProfitProvince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('month', models.IntegerField(verbose_name='几月')),
                ('profit_value', models.FloatField(verbose_name='盈利（利润）')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyProfitQGAvg',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('month', models.IntegerField(verbose_name='几月')),
                ('profit_value', models.FloatField(verbose_name='盈利（利润）')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('province_id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('provinceName', models.CharField(blank=True, max_length=16, null=True, verbose_name='省份')),
                ('cityContain', models.CharField(blank=True, max_length=16, null=True, verbose_name='包含城市')),
                ('danSalesAreaFlag', models.IntegerField(default=0, verbose_name='鸡蛋产区')),
                ('tSalesAreaFlag', models.IntegerField(default=0, verbose_name='淘汰鸡产区')),
                ('order', models.IntegerField(verbose_name='排序')),
                ('EnglishName', models.CharField(blank=True, max_length=32, null=True, verbose_name='英文名字')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='TaojiDailyPriceDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('date', models.DateField(verbose_name='日期')),
                ('dailyprice', models.FloatField(blank=True, null=True, verbose_name='日度价格')),
                ('comments', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.City', verbose_name='城市/区')),
            ],
            options={
                'verbose_name': '各地市区淘汰鸡日度价格',
                'verbose_name_plural': '各地市区淘汰鸡日度价格',
                'db_table': 'egg_taojidailypricedetail',
            },
        ),
        migrations.CreateModel(
            name='TaojiDailyPriceProvince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('date', models.DateField(verbose_name='日期')),
                ('p_daily_price', models.FloatField(blank=True, null=True, verbose_name='省均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.Province', verbose_name='省份')),
            ],
            options={
                'verbose_name': '淘汰鸡省级日均价',
                'verbose_name_plural': '淘汰鸡省级日均价',
                'db_table': 'egg_taojidailypriceprovince',
            },
        ),
        migrations.CreateModel(
            name='TaojiDailyPriceQGAvg',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('date', models.DateField(verbose_name='日期')),
                ('daily_price', models.FloatField(blank=True, null=True, verbose_name='全国均价')),
                ('chan_dailyprice', models.FloatField(blank=True, null=True, verbose_name='主产区均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '淘汰鸡全国日均价',
                'verbose_name_plural': '淘汰鸡全国日均价',
                'db_table': 'egg_taojidailypriceqgavg',
            },
        ),
        migrations.CreateModel(
            name='TaojiMonthlyPriceProvince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('month', models.IntegerField(verbose_name='周度')),
                ('p_monthly_price', models.FloatField(blank=True, null=True, verbose_name='省均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.Province', verbose_name='省份')),
            ],
            options={
                'verbose_name': '省级月度均价',
                'verbose_name_plural': '省级月度均价',
                'db_table': 'egg_taojimonthlypriceprovince',
            },
        ),
        migrations.CreateModel(
            name='TaojiMonthlyPriceQGAvg',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('month', models.IntegerField(verbose_name='月份')),
                ('month_price', models.FloatField(blank=True, null=True, verbose_name='月价')),
                ('chan_monthlyprice', models.FloatField(blank=True, null=True, verbose_name='主产区均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '淘汰鸡全国月度价格均价',
                'verbose_name_plural': '淘汰鸡全国月度价格均价',
                'db_table': 'egg_taojimonthlypriceqgavg',
            },
        ),
        migrations.CreateModel(
            name='TaojiWeeklyPriceProvince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('weekNum', models.IntegerField(verbose_name='周度')),
                ('p_weekly_price', models.FloatField(blank=True, null=True, verbose_name='省均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.Province', verbose_name='省份')),
            ],
            options={
                'verbose_name': '淘汰鸡省级周度均价',
                'verbose_name_plural': '淘汰鸡省级周度均价',
                'db_table': 'egg_taojiweeklypriceprovince',
            },
        ),
        migrations.CreateModel(
            name='TaojiWeeklyPriceQGAvg',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('weekNum', models.IntegerField(verbose_name='周度')),
                ('weekly_price', models.FloatField(blank=True, null=True, verbose_name='周价')),
                ('chan_weeklyprice', models.FloatField(blank=True, null=True, verbose_name='主产区均价')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '淘汰鸡全国周度价格均价',
                'verbose_name_plural': '淘汰鸡全国周度价格均价',
                'db_table': 'egg_taojiweeklypriceqgavg',
            },
        ),
        migrations.CreateModel(
            name='TaotaijiDailyPriceImportFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('file', models.FileField(upload_to='./upload/TaotaijiPrice/', verbose_name='上传文件')),
                ('date', models.DateField(verbose_name='日期选择')),
                ('name', models.CharField(max_length=32, verbose_name='文件名')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '淘汰鸡日度价格(Excel导入)',
                'verbose_name_plural': '淘汰鸡日度价格(Excel导入)',
                'db_table': 'egg_taotaijidailypriceimportfile',
            },
        ),
        migrations.CreateModel(
            name='WeekDateStandard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('Year', models.IntegerField(verbose_name='年份')),
                ('WeekNum', models.IntegerField(verbose_name='周度')),
                ('startDate', models.DateField(verbose_name='开始日期')),
                ('endDate', models.DateField(verbose_name='结束日期')),
                ('Remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyCostProvince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('weekNum', models.IntegerField(verbose_name='第几周')),
                ('cost_value', models.FloatField(verbose_name='成本')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.Province', verbose_name='省份')),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyCostQGAvg',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('weekNum', models.IntegerField(verbose_name='第几周')),
                ('cost_value', models.FloatField(verbose_name='成本')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '蛋鸡养殖全国周度成本',
                'verbose_name_plural': '蛋鸡养殖全国周度成本',
                'db_table': 'egg_weeklycostqgavg',
            },
        ),
        migrations.CreateModel(
            name='WeeklyProfitProvince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('weekNum', models.IntegerField(verbose_name='第几周')),
                ('profit_value', models.FloatField(verbose_name='盈利（利润）')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.Province', verbose_name='省份')),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyProfitQGAvg',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='序号')),
                ('year', models.IntegerField(verbose_name='年份')),
                ('weekNum', models.IntegerField(verbose_name='第几周')),
                ('profit_value', models.FloatField(verbose_name='盈利（利润）')),
                ('comments', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
        ),
        migrations.AddField(
            model_name='monthlyprofitprovince',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.Province', verbose_name='省份'),
        ),
        migrations.AddField(
            model_name='monthlycostprovince',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.Province', verbose_name='省份'),
        ),
        migrations.AddField(
            model_name='danweeklypriceprovince',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.Province', verbose_name='省份'),
        ),
        migrations.AddField(
            model_name='danmonthlypriceprovince',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.Province', verbose_name='省份'),
        ),
        migrations.AddField(
            model_name='dandailypriceprovince',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.Province', verbose_name='省份'),
        ),
        migrations.AddField(
            model_name='city',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egg.Province', verbose_name='所属省份'),
        ),
    ]
